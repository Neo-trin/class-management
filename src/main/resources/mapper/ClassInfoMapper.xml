<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myclass.dao.ClassInfoMapper">
    <resultMap type="ClassInfo" id="ClassInfoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="gradeID" column="gradeID" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <association property="createTeacher" column="createTeacher" javaType="TeacherInfo">
            <id property="id" column="createTeacher" jdbcType="INTEGER"/>
            <result property="name" column="teacherName" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <insert id="insertClassInfo" parameterType="ClassInfo">
        insert into classInfo(id, name, gradeID, createTeacher, createTime, remark)
        values (0, #{name}, #{gradeID}, #{createTeacher.id}, now(), #{remark});
    </insert>

    <update id="updateClassInfo" parameterType="ClassInfo">
        update classInfo
        <set>
            name = #{name} ,
            gradeID = #{gradeID},
            remark = #{remark}
        </set>
        where id = #{id}
    </update>

    <select id="getClassInfo" resultMap="ClassInfoMap">
        select
            classInfo.id,
            classInfo.name,
            classInfo.gradeID,
            classInfo.createTeacher,
            classInfo.createTime,
            classInfo.remark
        from
            classInfo
        <where>
            <if test="id != null and id != 0">
                and id = #{id}
            </if>
        </where>
    </select>

    <select id="listClassInfo" resultMap="ClassInfoMap">
        select id, name, gradeID, createTeacher, createTime, remark, gradeName, teacherName from (
        select classInfo.id,
        classInfo.name,
        classInfo.gradeID,
        classInfo.createTeacher,
        classInfo.createTime,
        classInfo.remark,
        dataDictionary.valueName as gradeName,
        teacherInfo.name as teacherName
        from classInfo classInfo
        left join dataDictionary dataDictionary on typeCode = 'GRADE' and dataDictionary.valueId = classInfo.gradeID
        left join teacherInfo teacherInfo on teacherInfo.id = classInfo.createTeacher
        ) t1
        <where>
            <if test="classInfo.gradeID != null and classInfo.gradeID != 0">
                and classInfo.gradeID = #{classInfo.gradeID}
            </if>
            <if test="classInfo.remark != null and classInfo.remark != ''">
                and classInfo.remark like concat('%',#{classInfo.remark},'%')
            </if>
        </where>
        order by CONVERT(`${orderCol}` using gbk) ${orderType}
    </select>

</mapper>